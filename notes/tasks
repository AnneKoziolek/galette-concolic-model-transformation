Implementation
* [MUST] General performance tuning
* [MUST] Any TODOs in codebase
* [SHOULD] Improve the performance of Unsafe accesses (switch to HashMap)
* [SHOULD] Switch the tag representation from a HashMap to Phosphor's PowerSetTree
* [SHOULD] Create README based on Phosphor's
* [SHOULD] Improve the performance of array accesses
* [SHOULD] Remove extra entries in stack traces produces from Thread#dumpThread and StackTraceElement#initStackTraceElements
    (remove the shadow wrapper for native methods)
* [SHOULD] Re-examine all masks and consider the implications of subclassing (e.g., what if this method were called
    with a sub or super class reference)
* [SHOULD] Create separate plugin for creating instrumented JDKs (astrolabe), "Utilities for dynamic analysis tools"
* [COULD] Configuration

Functional experiments
* [COULD] Create a detailed listing describing the functional benchmark groups
* [COULD] Add additional tests for MethodHandles
* [COULD] Add tests for pattern matching, ternary operators, and String templates
* [SHOULD] Consider moving benchmark tests for serialization into integration tests for Galette
* [SHOULD] Determine root cause of failures for Phosphor and MirrorTaint
* [MUST] Write up description of results

Performance experiments
* [MUST] Write up description of results
* [COULD] Identify locations to use as taint sources manually for each DaCapo subject and apply labels

Other
* [SHOULD] Create a full release of Phosphor
* [SHOULD] Contact the MirrorTaint authors about releasing an updated, obfuscated JAR for MirrorTaint containing the fixes I made and a license.
