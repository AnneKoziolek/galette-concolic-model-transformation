create table for functional benchmark suite (for supplemental materials)?
group | number of tests | description
ArrayReflectionITCase | X |Uses java.lang.reflect.Array to create arrays, set array elements, and get array elements

for signature polymorphism, show example of instrumentation applied at wrappers
and at signature polymorphic call sites
walk through example

Add list of work using dynamic taint tracking in JVM from thesis proposal slides

MirrorTaint only supports java 16 or lower (b/c of ASM version)

For Phosphor we used the options: -forceUnboxAcmpEq -withEnumsByValue and -serialization

Phosphor was crashing on:
VarHandleITCase#getAndBitwiseBoolean
VarHandleITCase#compareAndExchangeBoolean
with location
ONE_DIMENSIONAL_ARRAY.getBoolean

However, it no longer appears to be crashing

The ``cassandra'' benchmark was excluded due to a defect in the 23.11 Chopin release of DaCapo that impacts the
``cassandra'' benchmark (https://github.com/dacapobench/dacapobench/issues/211)


For each of the performance benchmarks and each treatment, we report the median (xÌƒ), and  standard deviation (s) of <STAT> value.
Mann-Whitney U tests were performed to compare the memory usage of other treatments against Galette on each benchmark.
A continuity correction of 0.5 was used when calculating p-values.
We used the Vargha-Delaney A12 statistic [CITE] to quantify the effect sizes of these comparisons.
We report the two-tailed, asymptotic p-value (p) and Vargha-Delaney A12 statistic for each of these comparisons.
Following current best practices as described by Arcuri and Briand [CITE], a base significance level of 0.05 was adjusted
for three comparisons resulting in a Bonferroni-corrected significance level of 0.0167 per test
Statistically significant differences between the <STAT> of Galette and the other treatments are colored red in Table 3.